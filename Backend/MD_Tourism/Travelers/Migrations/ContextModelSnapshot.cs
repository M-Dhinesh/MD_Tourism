// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travelers.Models;

#nullable disable

namespace Travelers.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Travelers.Models.Traveler", b =>
                {
                    b.Property<int>("TravellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravellerId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("TravellerId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("Travelers.Models.TravelerUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("TravelUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 251, 230, 112, 15, 96, 80, 250, 116, 26, 132, 211, 207, 172, 127, 236, 235, 26, 51, 167, 30, 131, 51, 132, 26, 138, 137, 94, 198, 189, 55, 15, 76, 208, 114, 42, 78, 233, 25, 221, 100, 76, 175, 184, 248, 108, 111, 106, 178, 143, 27, 84, 228, 193, 213, 29, 242, 221, 13, 118, 52, 137, 3, 101, 25 },
                            PasswordKey = new byte[] { 50, 224, 145, 157, 15, 165, 171, 82, 223, 93, 187, 124, 216, 225, 11, 61, 217, 76, 142, 104, 164, 177, 207, 210, 66, 249, 212, 106, 119, 34, 201, 163, 73, 229, 10, 242, 194, 112, 44, 125, 9, 249, 93, 119, 112, 3, 197, 155, 186, 229, 192, 178, 16, 205, 89, 115, 19, 254, 185, 93, 11, 108, 214, 131, 209, 214, 216, 47, 32, 168, 231, 206, 182, 160, 47, 80, 109, 30, 197, 243, 226, 129, 177, 146, 199, 248, 199, 47, 40, 128, 224, 62, 78, 138, 80, 166, 234, 171, 61, 193, 136, 60, 151, 209, 123, 116, 195, 27, 62, 60, 157, 7, 203, 201, 135, 15, 55, 97, 239, 138, 191, 216, 234, 140, 154, 3, 146, 14 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Travelers.Models.Traveler", b =>
                {
                    b.HasOne("Travelers.Models.TravelerUser", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
