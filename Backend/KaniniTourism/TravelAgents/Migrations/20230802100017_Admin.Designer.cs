// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAgents.Models;

#nullable disable

namespace TravelAgents.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230802100017_Admin")]
    partial class Admin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TravelAgents.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("TravelAgents.Models.TravelAgent", b =>
                {
                    b.Property<int>("TravelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgencyID")
                        .HasColumnType("int");

                    b.Property<string>("AgencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("TravelId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("TravelAgents.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 26, 236, 110, 116, 42, 238, 18, 124, 62, 185, 174, 26, 118, 62, 101, 153, 238, 123, 11, 230, 120, 97, 87, 7, 200, 37, 235, 210, 96, 144, 41, 179, 133, 135, 228, 35, 208, 195, 43, 234, 45, 226, 148, 42, 62, 51, 165, 236, 203, 132, 197, 52, 137, 163, 145, 151, 23, 37, 212, 136, 48, 255, 56, 109 },
                            PasswordKey = new byte[] { 164, 91, 157, 132, 24, 81, 121, 3, 42, 230, 131, 203, 66, 50, 100, 183, 120, 168, 248, 204, 122, 38, 163, 108, 254, 76, 102, 100, 133, 81, 61, 38, 2, 239, 236, 51, 53, 138, 44, 44, 4, 240, 174, 115, 26, 152, 191, 168, 79, 104, 194, 215, 141, 205, 92, 141, 54, 34, 216, 67, 43, 17, 204, 166, 55, 160, 76, 175, 180, 31, 212, 72, 6, 241, 137, 88, 199, 20, 55, 73, 38, 43, 171, 54, 105, 42, 4, 216, 243, 128, 133, 45, 170, 37, 19, 124, 149, 179, 19, 154, 88, 164, 69, 234, 160, 107, 70, 94, 3, 93, 178, 225, 233, 250, 119, 193, 119, 86, 181, 60, 205, 236, 8, 180, 60, 56, 47, 254 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("TravelAgents.Models.TravelAgent", b =>
                {
                    b.HasOne("TravelAgents.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
